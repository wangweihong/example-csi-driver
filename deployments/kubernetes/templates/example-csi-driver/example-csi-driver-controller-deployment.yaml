kind: Deployment
apiVersion: apps/v1
metadata:
  name: example-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-csi-controller
  template:
    metadata:
      labels:
        app: example-csi-controller
    spec:
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: config-map
          configMap:
            name: example-csi-configmap
            defaultMode: 420
      containers:
        - name: csi-resizer
          image: ${DEPLOYMENT_CSI_RESIZE_IMAGE}
          args:
            - '--csi-address=$(ADDRESS)'
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: csi-snapshotter
          image: ${DEPLOYMENT_CSI_SNAPSHOTTER_IMAGE}
          args:
            - '--csi-address=$(ADDRESS)'
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: snapshot-controller
          image: ${DEPLOYMENT_CSI_SNAPSHOT_CONTROLLER_IMAGE}
          args:
            - '--leader-election=false'
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: csi-provisioner
          image: ${DEPLOYMENT_CSI_PROVISIONER_IMAGE} # new version image has migrated to gcr repository. we should build image by code.
          args:
            - '--csi-address=$(ADDRESS)'
            - '--timeout=6h'
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: csi-attacher
          image: ${DEPLOYMENT_CSI_ATTACHER_IMAGE}
          args:
            - '--csi-address=$(ADDRESS)'
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: example-csi-driver
          image: 'example.io/component/csi-example-driver:v1.0.0'
          args:
            - '--endpoint=$(CSI_ENDPOINT)'
            - '--controller'
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: config-map
              mountPath: /etc/example
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: example-csi-controller
      serviceAccount: example-csi-controller
      hostNetwork: true